// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "produces": [
    "application/vnd.api+json",
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Form3 Payments API Test - Pawel Martuszewski",
    "version": "1"
  },
  "host": "localhost:6543",
  "basePath": "/v1",
  "paths": {
    "/health": {
      "get": {
        "summary": "Fetch payment service health",
        "responses": {
          "200": {
            "description": "Payment service health",
            "schema": {
              "$ref": "#/definitions/Health"
            }
          }
        }
      }
    },
    "/payments": {
      "get": {
        "summary": "List payments",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Filter by organisation id",
            "name": "filter[organisation_id]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of payment details",
            "schema": {
              "$ref": "#/definitions/PaymentDetailsListResponse"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/vnd.api+json",
          "application/json"
        ],
        "summary": "Create payment",
        "parameters": [
          {
            "name": "Payment creation request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PaymentCreation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Payment creation response",
            "schema": {
              "$ref": "#/definitions/PaymentCreationResponse"
            }
          },
          "400": {
            "description": "Payment creation error",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      },
      "patch": {
        "consumes": [
          "application/vnd.api+json",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Payment update request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PaymentUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment update response"
          },
          "400": {
            "description": "Payment update error",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Payment update not found",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/payments/{id}": {
      "get": {
        "summary": "Fetch payment",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Payment Id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Payment details",
            "schema": {
              "$ref": "#/definitions/PaymentDetailsResponse"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/vnd.api+json",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Payment Id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Payment deletion response"
          },
          "404": {
            "description": "Payment deletion error",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApiError": {
      "type": "object",
      "properties": {
        "error_code": {
          "type": "string"
        },
        "error_message": {
          "type": "string"
        }
      }
    },
    "Health": {
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of the service. Can either be ` + "`" + `up` + "`" + ` or ` + "`" + `down` + "`" + `.",
          "type": "string",
          "enum": [
            "up",
            "down"
          ],
          "example": "up"
        }
      }
    },
    "Links": {
      "type": "object",
      "properties": {
        "first": {
          "description": "Link to the first resource in the list",
          "type": "string",
          "example": "http://localhost:6543/v1/api_name/resource_type"
        },
        "last": {
          "description": "Link to the last resource in the list",
          "type": "string",
          "example": "http://localhost:6543/v1/api_name/resource_type"
        },
        "next": {
          "description": "Link to the next resource in the list",
          "type": "string",
          "example": "http://localhost:6543/v1/api_name/resource_type"
        },
        "prev": {
          "description": "Link to the previous resource in the list",
          "type": "string",
          "example": "http://localhost:6543/v1/api_name/resource_type"
        },
        "self": {
          "description": "Link to this resource type",
          "type": "string",
          "example": "http://localhost:6543/v1/api_name/resource_type"
        }
      }
    },
    "Payment": {
      "type": "object",
      "required": [
        "organisation_id",
        "attributes"
      ],
      "properties": {
        "attributes": {
          "type": "object",
          "properties": {
            "amount": {
              "description": "Amount of money moved between the instructing agent and instructed agent",
              "type": "string",
              "pattern": "^[0-9.]{0,20}$",
              "example": "10.00"
            },
            "beneficiary_party": {
              "properties": {
                "account_name": {
                  "description": "Name of beneficiary as given with account",
                  "type": "string",
                  "x-length": 40,
                  "example": "James Bond"
                },
                "account_number": {
                  "description": "Beneficiary account number",
                  "type": "string",
                  "x-length": 34,
                  "example": "71268996"
                }
              }
            },
            "currency": {
              "description": "Currency of the transaction amount. Currency code as defined in [ISO 4217](http://www.iso.org/iso/home/standards/currency_codes.htm)",
              "type": "string",
              "x-length": 3,
              "example": "EUR"
            },
            "debtor_party": {
              "type": "object",
              "properties": {
                "account_name": {
                  "description": "Name of debtor as given with account",
                  "type": "string",
                  "x-length": 40,
                  "example": "Jane Bond"
                },
                "account_number": {
                  "description": "Debtor account number. Allows upper case and numeric characters.",
                  "type": "string",
                  "x-length": 34,
                  "example": "12345678"
                }
              }
            },
            "reference": {
              "description": "Payment reference for beneficiary use",
              "type": "string",
              "x-length": 18,
              "example": "rent for oct"
            }
          }
        },
        "created_on": {
          "type": "integer",
          "x-nullable": true
        },
        "id": {
          "description": "Unique resource ID",
          "type": "string",
          "pattern": "^[[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
          "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772"
        },
        "modified_on": {
          "type": "integer",
          "x-nullable": true
        },
        "organisation_id": {
          "description": "Unique ID of the organisation this resource is created by",
          "type": "string",
          "pattern": "^[[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
          "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2"
        },
        "type": {
          "description": "Name of the resource type",
          "type": "string",
          "pattern": "^[A-Za-z_]*$",
          "example": "payments"
        },
        "version": {
          "description": "Version number",
          "type": "integer",
          "x-nullable": true,
          "example": 0
        }
      }
    },
    "PaymentCreation": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Payment"
        }
      }
    },
    "PaymentCreationResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Payment"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "PaymentDetailsListResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          }
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "PaymentDetailsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Payment"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "PaymentUpdate": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Payment"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "produces": [
    "application/vnd.api+json",
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Form3 Payments API Test - Pawel Martuszewski",
    "version": "1"
  },
  "host": "localhost:6543",
  "basePath": "/v1",
  "paths": {
    "/health": {
      "get": {
        "summary": "Fetch payment service health",
        "responses": {
          "200": {
            "description": "Payment service health",
            "schema": {
              "$ref": "#/definitions/Health"
            }
          }
        }
      }
    },
    "/payments": {
      "get": {
        "summary": "List payments",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Filter by organisation id",
            "name": "filter[organisation_id]",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of payment details",
            "schema": {
              "$ref": "#/definitions/PaymentDetailsListResponse"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/vnd.api+json",
          "application/json"
        ],
        "summary": "Create payment",
        "parameters": [
          {
            "name": "Payment creation request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PaymentCreation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Payment creation response",
            "schema": {
              "$ref": "#/definitions/PaymentCreationResponse"
            }
          },
          "400": {
            "description": "Payment creation error",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      },
      "patch": {
        "consumes": [
          "application/vnd.api+json",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Payment update request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PaymentUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment update response"
          },
          "400": {
            "description": "Payment update error",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Payment update not found",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/payments/{id}": {
      "get": {
        "summary": "Fetch payment",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Payment Id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Payment details",
            "schema": {
              "$ref": "#/definitions/PaymentDetailsResponse"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/vnd.api+json",
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Payment Id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Payment deletion response"
          },
          "404": {
            "description": "Payment deletion error",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApiError": {
      "type": "object",
      "properties": {
        "error_code": {
          "type": "string"
        },
        "error_message": {
          "type": "string"
        }
      }
    },
    "Health": {
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of the service. Can either be ` + "`" + `up` + "`" + ` or ` + "`" + `down` + "`" + `.",
          "type": "string",
          "enum": [
            "up",
            "down"
          ],
          "example": "up"
        }
      }
    },
    "Links": {
      "type": "object",
      "properties": {
        "first": {
          "description": "Link to the first resource in the list",
          "type": "string",
          "example": "http://localhost:6543/v1/api_name/resource_type"
        },
        "last": {
          "description": "Link to the last resource in the list",
          "type": "string",
          "example": "http://localhost:6543/v1/api_name/resource_type"
        },
        "next": {
          "description": "Link to the next resource in the list",
          "type": "string",
          "example": "http://localhost:6543/v1/api_name/resource_type"
        },
        "prev": {
          "description": "Link to the previous resource in the list",
          "type": "string",
          "example": "http://localhost:6543/v1/api_name/resource_type"
        },
        "self": {
          "description": "Link to this resource type",
          "type": "string",
          "example": "http://localhost:6543/v1/api_name/resource_type"
        }
      }
    },
    "Payment": {
      "type": "object",
      "required": [
        "organisation_id",
        "attributes"
      ],
      "properties": {
        "attributes": {
          "type": "object",
          "properties": {
            "amount": {
              "description": "Amount of money moved between the instructing agent and instructed agent",
              "type": "string",
              "pattern": "^[0-9.]{0,20}$",
              "example": "10.00"
            },
            "beneficiary_party": {
              "properties": {
                "account_name": {
                  "description": "Name of beneficiary as given with account",
                  "type": "string",
                  "x-length": 40,
                  "example": "James Bond"
                },
                "account_number": {
                  "description": "Beneficiary account number",
                  "type": "string",
                  "x-length": 34,
                  "example": "71268996"
                }
              }
            },
            "currency": {
              "description": "Currency of the transaction amount. Currency code as defined in [ISO 4217](http://www.iso.org/iso/home/standards/currency_codes.htm)",
              "type": "string",
              "x-length": 3,
              "example": "EUR"
            },
            "debtor_party": {
              "type": "object",
              "properties": {
                "account_name": {
                  "description": "Name of debtor as given with account",
                  "type": "string",
                  "x-length": 40,
                  "example": "Jane Bond"
                },
                "account_number": {
                  "description": "Debtor account number. Allows upper case and numeric characters.",
                  "type": "string",
                  "x-length": 34,
                  "example": "12345678"
                }
              }
            },
            "reference": {
              "description": "Payment reference for beneficiary use",
              "type": "string",
              "x-length": 18,
              "example": "rent for oct"
            }
          }
        },
        "created_on": {
          "type": "integer",
          "x-nullable": true
        },
        "id": {
          "description": "Unique resource ID",
          "type": "string",
          "pattern": "^[[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
          "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772"
        },
        "modified_on": {
          "type": "integer",
          "x-nullable": true
        },
        "organisation_id": {
          "description": "Unique ID of the organisation this resource is created by",
          "type": "string",
          "pattern": "^[[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$",
          "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2"
        },
        "type": {
          "description": "Name of the resource type",
          "type": "string",
          "pattern": "^[A-Za-z_]*$",
          "example": "payments"
        },
        "version": {
          "description": "Version number",
          "type": "integer",
          "minimum": 0,
          "x-nullable": true,
          "example": 0
        }
      }
    },
    "PaymentCreation": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Payment"
        }
      }
    },
    "PaymentCreationResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Payment"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "PaymentDetailsListResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payment"
          }
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "PaymentDetailsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Payment"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "PaymentUpdate": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Payment"
        }
      }
    }
  }
}`))
}
